Index: src/components/Avatar.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from \"react\";\r\n\r\ninterface AvatarProps {\r\n    onPhotoUpload: (isUploaded: boolean) => void;\r\n}\r\n\r\nconst Avatar: React.FC<AvatarProps> = ({ onPhotoUpload }) => {\r\n    const [imgAvatar, setImgAvatar] = useState<string | null>(null);\r\n\r\n    const handlePhotoUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files && e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setImgAvatar(reader.result);\r\n                }\r\n            };\r\n            reader.readAsDataURL(file);\r\n            onPhotoUpload(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                name=\"avatarInput\"\r\n                id=\"avatarInput\"\r\n                accept=\"image/*\"\r\n                style={{ position: 'absolute', top: '-300px', width: '200px' }}\r\n                onChange={handlePhotoUpload}\r\n            />\r\n            <div className=\"avatar\">\r\n                {imgAvatar && <img src={imgAvatar} alt=\"Uploaded Avatar\" style={{ maxWidth: '100%', maxHeight: '100%', objectFit: 'cover' }} />}\r\n                <label htmlFor=\"avatarInput\">Загрузить фото</label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Avatar;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Avatar.tsx b/src/components/Avatar.tsx
--- a/src/components/Avatar.tsx	(revision 0cb405b7f21419225556b0998728bfbbaa810305)
+++ b/src/components/Avatar.tsx	(date 1711816081607)
@@ -1,4 +1,7 @@
 import React, { useState } from "react";
+import {useDispatch} from "react-redux";
+import {setPhotoUrl} from "../healper/slice";
+import '../themeCss/colors.css'
 
 interface AvatarProps {
     onPhotoUpload: (isUploaded: boolean) => void;
@@ -6,7 +9,7 @@
 
 const Avatar: React.FC<AvatarProps> = ({ onPhotoUpload }) => {
     const [imgAvatar, setImgAvatar] = useState<string | null>(null);
-
+    const dispatch = useDispatch();
     const handlePhotoUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
         const file = e.target.files && e.target.files[0];
         if (file) {
@@ -14,6 +17,9 @@
             reader.onload = () => {
                 if (typeof reader.result === 'string') {
                     setImgAvatar(reader.result);
+                    const url = reader.result
+                    dispatch(setPhotoUrl(url));
+                    console.log(url)
                 }
             };
             reader.readAsDataURL(file);
@@ -32,8 +38,11 @@
                 onChange={handlePhotoUpload}
             />
             <div className="avatar">
-                {imgAvatar && <img src={imgAvatar} alt="Uploaded Avatar" style={{ maxWidth: '100%', maxHeight: '100%', objectFit: 'cover' }} />}
-                <label htmlFor="avatarInput">Загрузить фото</label>
+
+                <label htmlFor="avatarInput">
+                    {imgAvatar && <img src={imgAvatar} alt="Uploaded Avatar" style={{ maxWidth: '100%', maxHeight: '100%', objectFit: 'cover' }} />
+                    }
+                </label>
             </div>
         </div>
     );
